// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// get_temp_dirp_cpp
NumericMatrix get_temp_dirp_cpp(std::string filepath_image, int image_height, int image_width, double object_distance, double relative_humidity, double emissivity, double reflected_apparent_temperature, std::string filepath_dll);
RcppExport SEXP _theRmalUAV_get_temp_dirp_cpp(SEXP filepath_imageSEXP, SEXP image_heightSEXP, SEXP image_widthSEXP, SEXP object_distanceSEXP, SEXP relative_humiditySEXP, SEXP emissivitySEXP, SEXP reflected_apparent_temperatureSEXP, SEXP filepath_dllSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filepath_image(filepath_imageSEXP);
    Rcpp::traits::input_parameter< int >::type image_height(image_heightSEXP);
    Rcpp::traits::input_parameter< int >::type image_width(image_widthSEXP);
    Rcpp::traits::input_parameter< double >::type object_distance(object_distanceSEXP);
    Rcpp::traits::input_parameter< double >::type relative_humidity(relative_humiditySEXP);
    Rcpp::traits::input_parameter< double >::type emissivity(emissivitySEXP);
    Rcpp::traits::input_parameter< double >::type reflected_apparent_temperature(reflected_apparent_temperatureSEXP);
    Rcpp::traits::input_parameter< std::string >::type filepath_dll(filepath_dllSEXP);
    rcpp_result_gen = Rcpp::wrap(get_temp_dirp_cpp(filepath_image, image_height, image_width, object_distance, relative_humidity, emissivity, reflected_apparent_temperature, filepath_dll));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_theRmalUAV_get_temp_dirp_cpp", (DL_FUNC) &_theRmalUAV_get_temp_dirp_cpp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_theRmalUAV(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
